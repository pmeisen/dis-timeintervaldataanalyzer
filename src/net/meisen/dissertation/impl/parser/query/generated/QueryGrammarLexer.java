// Generated from Y:\dis-timeintervaldataanalyzer\src\net\meisen\dissertation\impl\parser\query\generated\QueryGrammar.g4 by ANTLR 4.1

package net.meisen.dissertation.impl.parser.query.generated;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QueryGrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MARKED_ID=1, DESC_VALUE=2, NULL_VALUE=3, STMT_SELECT=4, TYPE_TIMESERIES=5, 
		TYPE_RECORDS=6, OP_FROM=7, OP_IN=8, OP_GROUPBY=9, OP_FILTERBY=10, LOGICAL_OR=11, 
		LOGICAL_AND=12, LOGICAL_NOT=13, LOGICAL_IGNORE=14, CMP_EQUAL=15, BRACKET_ROUND_OPENED=16, 
		BRACKET_ROUND_CLOSED=17, BRACKET_SQUARE_OPENED=18, BRACKET_SQUARE_CLOSED=19, 
		BRACKET_CURLY_OPENED=20, BRACKET_CURLY_CLOSED=21, SEPARATOR=22, DATE=23, 
		INT=24, ID=25, WHITESPACE=26;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"MARKED_ID", "DESC_VALUE", "NULL_VALUE", "STMT_SELECT", "TYPE_TIMESERIES", 
		"TYPE_RECORDS", "OP_FROM", "OP_IN", "OP_GROUPBY", "OP_FILTERBY", "LOGICAL_OR", 
		"LOGICAL_AND", "LOGICAL_NOT", "LOGICAL_IGNORE", "'='", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "','", "DATE", "INT", "ID", "WHITESPACE"
	};
	public static final String[] ruleNames = {
		"MARKED_ID", "DESC_VALUE", "NULL_VALUE", "STMT_SELECT", "TYPE_TIMESERIES", 
		"TYPE_RECORDS", "OP_FROM", "OP_IN", "OP_GROUPBY", "OP_FILTERBY", "LOGICAL_OR", 
		"LOGICAL_AND", "LOGICAL_NOT", "LOGICAL_IGNORE", "CMP_EQUAL", "BRACKET_ROUND_OPENED", 
		"BRACKET_ROUND_CLOSED", "BRACKET_SQUARE_OPENED", "BRACKET_SQUARE_CLOSED", 
		"BRACKET_CURLY_OPENED", "BRACKET_CURLY_CLOSED", "SEPARATOR", "DATE", "INT", 
		"ID", "WHITESPACE", "SYM_ALL_MASK", "SYM_DESC_VALUE", "SYM_QUOTE", "SYM_IDMARKER", 
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public QueryGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "QueryGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 25: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\34\u01ae\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\5\3}\n\3\3\3\7\3\u0080\n\3\f\3\16\3\u0083\13\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\5\f\u00c6\n\f\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\5\r\u00ce\n\r\3\16\3\16\3\16\3\16\3\16\5\16\u00d5"+
		"\n\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u015e\n\30\3\31"+
		"\6\31\u0161\n\31\r\31\16\31\u0162\3\32\3\32\7\32\u0167\n\32\f\32\16\32"+
		"\u016a\13\32\3\33\6\33\u016d\n\33\r\33\16\33\u016e\3\33\3\33\3\34\3\34"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3"+
		"&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60"+
		"\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\38\38\39\39\3\u0081:\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n"+
		"\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%"+
		"\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\2\67\2\19\2"+
		"\1;\2\1=\2\1?\2\1A\2\1C\2\1E\2\1G\2\1I\2\1K\2\1M\2\1O\2\1Q\2\1S\2\1U\2"+
		"\1W\2\1Y\2\1[\2\1]\2\1_\2\1a\2\1c\2\1e\2\1g\2\1i\2\1k\2\1m\2\1o\2\1q\2"+
		"\1\3\2!\4\2))^^\3\2\62;\4\2C\\c|\7\2//\62;C\\aac|\5\2\13\f\17\17\"\"\4"+
		"\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKk"+
		"k\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2"+
		"TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\|"+
		"|\u01a0\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\3s\3\2\2\2\5w\3\2\2\2"+
		"\7\u0086\3\2\2\2\t\u008b\3\2\2\2\13\u0092\3\2\2\2\r\u009d\3\2\2\2\17\u00a5"+
		"\3\2\2\2\21\u00aa\3\2\2\2\23\u00ad\3\2\2\2\25\u00b6\3\2\2\2\27\u00c5\3"+
		"\2\2\2\31\u00cd\3\2\2\2\33\u00d4\3\2\2\2\35\u00d6\3\2\2\2\37\u00dd\3\2"+
		"\2\2!\u00df\3\2\2\2#\u00e1\3\2\2\2%\u00e3\3\2\2\2\'\u00e5\3\2\2\2)\u00e7"+
		"\3\2\2\2+\u00e9\3\2\2\2-\u00eb\3\2\2\2/\u015d\3\2\2\2\61\u0160\3\2\2\2"+
		"\63\u0164\3\2\2\2\65\u016c\3\2\2\2\67\u0172\3\2\2\29\u0174\3\2\2\2;\u0176"+
		"\3\2\2\2=\u0178\3\2\2\2?\u017a\3\2\2\2A\u017c\3\2\2\2C\u017e\3\2\2\2E"+
		"\u0180\3\2\2\2G\u0182\3\2\2\2I\u0184\3\2\2\2K\u0186\3\2\2\2M\u0188\3\2"+
		"\2\2O\u018a\3\2\2\2Q\u018c\3\2\2\2S\u018e\3\2\2\2U\u0190\3\2\2\2W\u0192"+
		"\3\2\2\2Y\u0194\3\2\2\2[\u0196\3\2\2\2]\u0198\3\2\2\2_\u019a\3\2\2\2a"+
		"\u019c\3\2\2\2c\u019e\3\2\2\2e\u01a0\3\2\2\2g\u01a2\3\2\2\2i\u01a4\3\2"+
		"\2\2k\u01a6\3\2\2\2m\u01a8\3\2\2\2o\u01aa\3\2\2\2q\u01ac\3\2\2\2st\5="+
		"\37\2tu\5\63\32\2uv\5=\37\2v\4\3\2\2\2w\u0081\59\35\2x|\5;\36\2y}\59\35"+
		"\2z}\5;\36\2{}\5\67\34\2|y\3\2\2\2|z\3\2\2\2|{\3\2\2\2}\u0080\3\2\2\2"+
		"~\u0080\n\2\2\2\177x\3\2\2\2\177~\3\2\2\2\u0080\u0083\3\2\2\2\u0081\u0082"+
		"\3\2\2\2\u0081\177\3\2\2\2\u0082\u0084\3\2\2\2\u0083\u0081\3\2\2\2\u0084"+
		"\u0085\59\35\2\u0085\6\3\2\2\2\u0086\u0087\5Y-\2\u0087\u0088\5g\64\2\u0088"+
		"\u0089\5U+\2\u0089\u008a\5U+\2\u008a\b\3\2\2\2\u008b\u008c\5c\62\2\u008c"+
		"\u008d\5G$\2\u008d\u008e\5U+\2\u008e\u008f\5G$\2\u008f\u0090\5C\"\2\u0090"+
		"\u0091\5e\63\2\u0091\n\3\2\2\2\u0092\u0093\5e\63\2\u0093\u0094\5O(\2\u0094"+
		"\u0095\5W,\2\u0095\u0096\5G$\2\u0096\u0097\5c\62\2\u0097\u0098\5G$\2\u0098"+
		"\u0099\5a\61\2\u0099\u009a\5O(\2\u009a\u009b\5G$\2\u009b\u009c\5c\62\2"+
		"\u009c\f\3\2\2\2\u009d\u009e\5a\61\2\u009e\u009f\5G$\2\u009f\u00a0\5C"+
		"\"\2\u00a0\u00a1\5[.\2\u00a1\u00a2\5a\61\2\u00a2\u00a3\5E#\2\u00a3\u00a4"+
		"\5c\62\2\u00a4\16\3\2\2\2\u00a5\u00a6\5I%\2\u00a6\u00a7\5a\61\2\u00a7"+
		"\u00a8\5[.\2\u00a8\u00a9\5W,\2\u00a9\20\3\2\2\2\u00aa\u00ab\5O(\2\u00ab"+
		"\u00ac\5Y-\2\u00ac\22\3\2\2\2\u00ad\u00ae\5K&\2\u00ae\u00af\5a\61\2\u00af"+
		"\u00b0\5[.\2\u00b0\u00b1\5g\64\2\u00b1\u00b2\5]/\2\u00b2\u00b3\7\"\2\2"+
		"\u00b3\u00b4\5A!\2\u00b4\u00b5\5o8\2\u00b5\24\3\2\2\2\u00b6\u00b7\5I%"+
		"\2\u00b7\u00b8\5O(\2\u00b8\u00b9\5U+\2\u00b9\u00ba\5e\63\2\u00ba\u00bb"+
		"\5G$\2\u00bb\u00bc\5a\61\2\u00bc\u00bd\7\"\2\2\u00bd\u00be\5A!\2\u00be"+
		"\u00bf\5o8\2\u00bf\26\3\2\2\2\u00c0\u00c1\5[.\2\u00c1\u00c2\5a\61\2\u00c2"+
		"\u00c6\3\2\2\2\u00c3\u00c4\7~\2\2\u00c4\u00c6\7~\2\2\u00c5\u00c0\3\2\2"+
		"\2\u00c5\u00c3\3\2\2\2\u00c6\30\3\2\2\2\u00c7\u00c8\5? \2\u00c8\u00c9"+
		"\5Y-\2\u00c9\u00ca\5E#\2\u00ca\u00ce\3\2\2\2\u00cb\u00cc\7(\2\2\u00cc"+
		"\u00ce\7(\2\2\u00cd\u00c7\3\2\2\2\u00cd\u00cb\3\2\2\2\u00ce\32\3\2\2\2"+
		"\u00cf\u00d0\5Y-\2\u00d0\u00d1\5[.\2\u00d1\u00d2\5e\63\2\u00d2\u00d5\3"+
		"\2\2\2\u00d3\u00d5\7#\2\2\u00d4\u00cf\3\2\2\2\u00d4\u00d3\3\2\2\2\u00d5"+
		"\34\3\2\2\2\u00d6\u00d7\5O(\2\u00d7\u00d8\5K&\2\u00d8\u00d9\5Y-\2\u00d9"+
		"\u00da\5[.\2\u00da\u00db\5a\61\2\u00db\u00dc\5G$\2\u00dc\36\3\2\2\2\u00dd"+
		"\u00de\7?\2\2\u00de \3\2\2\2\u00df\u00e0\7*\2\2\u00e0\"\3\2\2\2\u00e1"+
		"\u00e2\7+\2\2\u00e2$\3\2\2\2\u00e3\u00e4\7]\2\2\u00e4&\3\2\2\2\u00e5\u00e6"+
		"\7_\2\2\u00e6(\3\2\2\2\u00e7\u00e8\7}\2\2\u00e8*\3\2\2\2\u00e9\u00ea\7"+
		"\177\2\2\u00ea,\3\2\2\2\u00eb\u00ec\7.\2\2\u00ec.\3\2\2\2\u00ed\u00ee"+
		"\t\3\2\2\u00ee\u00ef\t\3\2\2\u00ef\u00f0\7\60\2\2\u00f0\u00f1\t\3\2\2"+
		"\u00f1\u00f2\t\3\2\2\u00f2\u00f3\7\60\2\2\u00f3\u00f4\t\3\2\2\u00f4\u00f5"+
		"\t\3\2\2\u00f5\u00f6\t\3\2\2\u00f6\u00f7\t\3\2\2\u00f7\u00f8\7\"\2\2\u00f8"+
		"\u00f9\t\3\2\2\u00f9\u00fa\t\3\2\2\u00fa\u00fb\7<\2\2\u00fb\u00fc\t\3"+
		"\2\2\u00fc\u00fd\t\3\2\2\u00fd\u00fe\7<\2\2\u00fe\u00ff\t\3\2\2\u00ff"+
		"\u015e\t\3\2\2\u0100\u0101\t\3\2\2\u0101\u0102\t\3\2\2\u0102\u0103\7\60"+
		"\2\2\u0103\u0104\t\3\2\2\u0104\u0105\t\3\2\2\u0105\u0106\7\60\2\2\u0106"+
		"\u0107\t\3\2\2\u0107\u0108\t\3\2\2\u0108\u0109\t\3\2\2\u0109\u015e\t\3"+
		"\2\2\u010a\u010b\t\3\2\2\u010b\u010c\t\3\2\2\u010c\u010d\t\3\2\2\u010d"+
		"\u010e\t\3\2\2\u010e\u010f\7/\2\2\u010f\u0110\t\3\2\2\u0110\u0111\t\3"+
		"\2\2\u0111\u0112\7/\2\2\u0112\u0113\t\3\2\2\u0113\u0114\t\3\2\2\u0114"+
		"\u0115\7\"\2\2\u0115\u0116\t\3\2\2\u0116\u0117\t\3\2\2\u0117\u0118\7<"+
		"\2\2\u0118\u0119\t\3\2\2\u0119\u011a\t\3\2\2\u011a\u011b\7<\2\2\u011b"+
		"\u011c\t\3\2\2\u011c\u015e\t\3\2\2\u011d\u011e\t\3\2\2\u011e\u011f\t\3"+
		"\2\2\u011f\u0120\t\3\2\2\u0120\u0121\t\3\2\2\u0121\u0122\7/\2\2\u0122"+
		"\u0123\t\3\2\2\u0123\u0124\t\3\2\2\u0124\u0125\7/\2\2\u0125\u0126\t\3"+
		"\2\2\u0126\u015e\t\3\2\2\u0127\u0128\t\3\2\2\u0128\u0129\t\3\2\2\u0129"+
		"\u012a\t\3\2\2\u012a\u012b\t\3\2\2\u012b\u012c\t\3\2\2\u012c\u012d\t\3"+
		"\2\2\u012d\u012e\t\3\2\2\u012e\u012f\t\3\2\2\u012f\u0130\7\"\2\2\u0130"+
		"\u0131\t\3\2\2\u0131\u0132\t\3\2\2\u0132\u0133\7<\2\2\u0133\u0134\t\3"+
		"\2\2\u0134\u0135\t\3\2\2\u0135\u0136\7<\2\2\u0136\u0137\t\3\2\2\u0137"+
		"\u015e\t\3\2\2\u0138\u0139\t\3\2\2\u0139\u013a\t\3\2\2\u013a\u013b\t\3"+
		"\2\2\u013b\u013c\t\3\2\2\u013c\u013d\t\3\2\2\u013d\u013e\t\3\2\2\u013e"+
		"\u013f\t\3\2\2\u013f\u015e\t\3\2\2\u0140\u0141\t\3\2\2\u0141\u0142\t\3"+
		"\2\2\u0142\u0143\t\3\2\2\u0143\u0144\t\3\2\2\u0144\u0145\7\60\2\2\u0145"+
		"\u0146\t\3\2\2\u0146\u0147\t\3\2\2\u0147\u0148\7\60\2\2\u0148\u0149\t"+
		"\3\2\2\u0149\u014a\t\3\2\2\u014a\u014b\7\"\2\2\u014b\u014c\t\3\2\2\u014c"+
		"\u014d\t\3\2\2\u014d\u014e\7<\2\2\u014e\u014f\t\3\2\2\u014f\u0150\t\3"+
		"\2\2\u0150\u0151\7<\2\2\u0151\u0152\t\3\2\2\u0152\u015e\t\3\2\2\u0153"+
		"\u0154\t\3\2\2\u0154\u0155\t\3\2\2\u0155\u0156\t\3\2\2\u0156\u0157\t\3"+
		"\2\2\u0157\u0158\7\60\2\2\u0158\u0159\t\3\2\2\u0159\u015a\t\3\2\2\u015a"+
		"\u015b\7\60\2\2\u015b\u015c\t\3\2\2\u015c\u015e\t\3\2\2\u015d\u00ed\3"+
		"\2\2\2\u015d\u0100\3\2\2\2\u015d\u010a\3\2\2\2\u015d\u011d\3\2\2\2\u015d"+
		"\u0127\3\2\2\2\u015d\u0138\3\2\2\2\u015d\u0140\3\2\2\2\u015d\u0153\3\2"+
		"\2\2\u015e\60\3\2\2\2\u015f\u0161\t\3\2\2\u0160\u015f\3\2\2\2\u0161\u0162"+
		"\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\62\3\2\2\2\u0164"+
		"\u0168\t\4\2\2\u0165\u0167\t\5\2\2\u0166\u0165\3\2\2\2\u0167\u016a\3\2"+
		"\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169\64\3\2\2\2\u016a\u0168"+
		"\3\2\2\2\u016b\u016d\t\6\2\2\u016c\u016b\3\2\2\2\u016d\u016e\3\2\2\2\u016e"+
		"\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0171\b\33"+
		"\2\2\u0171\66\3\2\2\2\u0172\u0173\7,\2\2\u01738\3\2\2\2\u0174\u0175\7"+
		")\2\2\u0175:\3\2\2\2\u0176\u0177\7^\2\2\u0177<\3\2\2\2\u0178\u0179\7$"+
		"\2\2\u0179>\3\2\2\2\u017a\u017b\t\7\2\2\u017b@\3\2\2\2\u017c\u017d\t\b"+
		"\2\2\u017dB\3\2\2\2\u017e\u017f\t\t\2\2\u017fD\3\2\2\2\u0180\u0181\t\n"+
		"\2\2\u0181F\3\2\2\2\u0182\u0183\t\13\2\2\u0183H\3\2\2\2\u0184\u0185\t"+
		"\f\2\2\u0185J\3\2\2\2\u0186\u0187\t\r\2\2\u0187L\3\2\2\2\u0188\u0189\t"+
		"\16\2\2\u0189N\3\2\2\2\u018a\u018b\t\17\2\2\u018bP\3\2\2\2\u018c\u018d"+
		"\t\20\2\2\u018dR\3\2\2\2\u018e\u018f\t\21\2\2\u018fT\3\2\2\2\u0190\u0191"+
		"\t\22\2\2\u0191V\3\2\2\2\u0192\u0193\t\23\2\2\u0193X\3\2\2\2\u0194\u0195"+
		"\t\24\2\2\u0195Z\3\2\2\2\u0196\u0197\t\25\2\2\u0197\\\3\2\2\2\u0198\u0199"+
		"\t\26\2\2\u0199^\3\2\2\2\u019a\u019b\t\27\2\2\u019b`\3\2\2\2\u019c\u019d"+
		"\t\30\2\2\u019db\3\2\2\2\u019e\u019f\t\31\2\2\u019fd\3\2\2\2\u01a0\u01a1"+
		"\t\32\2\2\u01a1f\3\2\2\2\u01a2\u01a3\t\33\2\2\u01a3h\3\2\2\2\u01a4\u01a5"+
		"\t\34\2\2\u01a5j\3\2\2\2\u01a6\u01a7\t\35\2\2\u01a7l\3\2\2\2\u01a8\u01a9"+
		"\t\36\2\2\u01a9n\3\2\2\2\u01aa\u01ab\t\37\2\2\u01abp\3\2\2\2\u01ac\u01ad"+
		"\t \2\2\u01adr\3\2\2\2\r\2|\177\u0081\u00c5\u00cd\u00d4\u015d\u0162\u0168"+
		"\u016e";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}