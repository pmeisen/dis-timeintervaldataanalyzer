// Generated from Y:\dis-timeintervaldataanalyzer\src\net\meisen\dissertation\impl\parser\query\generated\QueryGrammar.g4 by ANTLR 4.1

package net.meisen.dissertation.impl.parser.query.generated;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QueryGrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MARKED_ID=1, DESC_VALUE=2, NULL_VALUE=3, STMT_SELECT=4, TYPE_TIMESERIES=5, 
		TYPE_RECORDS=6, OP_FROM=7, OP_OF=8, OP_IN=9, OP_GROUPBY=10, OP_FILTERBY=11, 
		LOGICAL_OR=12, LOGICAL_AND=13, LOGICAL_NOT=14, LOGICAL_IGNORE=15, AGGR_COUNT=16, 
		AGGR_SUM=17, AGGR_MIN=18, AGGR_MAX=19, AGGR_AVERAGE=20, AGGR_MODE=21, 
		AGGR_MEAN=22, AGGR_MEDIAN=23, CMP_EQUAL=24, BRACKET_ROUND_OPENED=25, BRACKET_ROUND_CLOSED=26, 
		BRACKET_SQUARE_OPENED=27, BRACKET_SQUARE_CLOSED=28, BRACKET_CURLY_OPENED=29, 
		BRACKET_CURLY_CLOSED=30, SEPARATOR=31, DATE=32, INT=33, SIMPLE_ID=34, 
		ENHANCED_ID=35, WHITESPACE=36;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"MARKED_ID", "DESC_VALUE", "NULL_VALUE", "STMT_SELECT", "TYPE_TIMESERIES", 
		"TYPE_RECORDS", "OP_FROM", "OP_OF", "OP_IN", "OP_GROUPBY", "OP_FILTERBY", 
		"LOGICAL_OR", "LOGICAL_AND", "LOGICAL_NOT", "LOGICAL_IGNORE", "AGGR_COUNT", 
		"AGGR_SUM", "AGGR_MIN", "AGGR_MAX", "AGGR_AVERAGE", "AGGR_MODE", "AGGR_MEAN", 
		"AGGR_MEDIAN", "'='", "'('", "')'", "'['", "']'", "'{'", "'}'", "','", 
		"DATE", "INT", "SIMPLE_ID", "ENHANCED_ID", "WHITESPACE"
	};
	public static final String[] ruleNames = {
		"MARKED_ID", "DESC_VALUE", "NULL_VALUE", "STMT_SELECT", "TYPE_TIMESERIES", 
		"TYPE_RECORDS", "OP_FROM", "OP_OF", "OP_IN", "OP_GROUPBY", "OP_FILTERBY", 
		"LOGICAL_OR", "LOGICAL_AND", "LOGICAL_NOT", "LOGICAL_IGNORE", "AGGR_COUNT", 
		"AGGR_SUM", "AGGR_MIN", "AGGR_MAX", "AGGR_AVERAGE", "AGGR_MODE", "AGGR_MEAN", 
		"AGGR_MEDIAN", "CMP_EQUAL", "BRACKET_ROUND_OPENED", "BRACKET_ROUND_CLOSED", 
		"BRACKET_SQUARE_OPENED", "BRACKET_SQUARE_CLOSED", "BRACKET_CURLY_OPENED", 
		"BRACKET_CURLY_CLOSED", "SEPARATOR", "DATE", "INT", "SIMPLE_ID", "ENHANCED_ID", 
		"WHITESPACE", "SYM_ALL_MASK", "SYM_DESC_VALUE", "SYM_QUOTE", "SYM_IDMARKER", 
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public QueryGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "QueryGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 35: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2&\u01f8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\3\2\3\2\3\2\5\2\u008b\n\2\3\2\3\2"+
		"\3\3\3\3\3\3\3\3\3\3\5\3\u0094\n\3\3\3\7\3\u0097\n\3\f\3\16\3\u009a\13"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3"+
		"\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\r\5\r\u00e0\n\r\3\16\3\16\3\16\3\16\3\16\3\16\5\16\u00e8\n\16\3\17"+
		"\3\17\3\17\3\17\3\17\5\17\u00ef\n\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37"+
		"\3\37\3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3"+
		"!\5!\u01a3\n!\3\"\6\"\u01a6\n\"\r\"\16\"\u01a7\3#\6#\u01ab\n#\r#\16#\u01ac"+
		"\3$\3$\7$\u01b1\n$\f$\16$\u01b4\13$\3%\6%\u01b7\n%\r%\16%\u01b8\3%\3%"+
		"\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3"+
		"\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3"+
		"\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B"+
		"\3C\3C\3\u0098D\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23"+
		"\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1"+
		"\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1"+
		";\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\2K\2\1M\2\1O\2\1Q\2\1S\2\1U\2\1W\2\1"+
		"Y\2\1[\2\1]\2\1_\2\1a\2\1c\2\1e\2\1g\2\1i\2\1k\2\1m\2\1o\2\1q\2\1s\2\1"+
		"u\2\1w\2\1y\2\1{\2\1}\2\1\177\2\1\u0081\2\1\u0083\2\1\u0085\2\1\3\2!\4"+
		"\2))^^\3\2\62;\4\2C\\c|\7\2//\62;C\\aac|\5\2\13\f\17\17\"\"\4\2CCcc\4"+
		"\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLl"+
		"l\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2"+
		"UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\u01ec\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\3\u0087\3\2\2\2\5\u008e\3\2\2\2\7\u009d\3\2\2\2\t\u00a2\3"+
		"\2\2\2\13\u00a9\3\2\2\2\r\u00b4\3\2\2\2\17\u00bc\3\2\2\2\21\u00c1\3\2"+
		"\2\2\23\u00c4\3\2\2\2\25\u00c7\3\2\2\2\27\u00d0\3\2\2\2\31\u00df\3\2\2"+
		"\2\33\u00e7\3\2\2\2\35\u00ee\3\2\2\2\37\u00f0\3\2\2\2!\u00f7\3\2\2\2#"+
		"\u00fd\3\2\2\2%\u0101\3\2\2\2\'\u0105\3\2\2\2)\u0109\3\2\2\2+\u0111\3"+
		"\2\2\2-\u0116\3\2\2\2/\u011b\3\2\2\2\61\u0122\3\2\2\2\63\u0124\3\2\2\2"+
		"\65\u0126\3\2\2\2\67\u0128\3\2\2\29\u012a\3\2\2\2;\u012c\3\2\2\2=\u012e"+
		"\3\2\2\2?\u0130\3\2\2\2A\u01a2\3\2\2\2C\u01a5\3\2\2\2E\u01aa\3\2\2\2G"+
		"\u01ae\3\2\2\2I\u01b6\3\2\2\2K\u01bc\3\2\2\2M\u01be\3\2\2\2O\u01c0\3\2"+
		"\2\2Q\u01c2\3\2\2\2S\u01c4\3\2\2\2U\u01c6\3\2\2\2W\u01c8\3\2\2\2Y\u01ca"+
		"\3\2\2\2[\u01cc\3\2\2\2]\u01ce\3\2\2\2_\u01d0\3\2\2\2a\u01d2\3\2\2\2c"+
		"\u01d4\3\2\2\2e\u01d6\3\2\2\2g\u01d8\3\2\2\2i\u01da\3\2\2\2k\u01dc\3\2"+
		"\2\2m\u01de\3\2\2\2o\u01e0\3\2\2\2q\u01e2\3\2\2\2s\u01e4\3\2\2\2u\u01e6"+
		"\3\2\2\2w\u01e8\3\2\2\2y\u01ea\3\2\2\2{\u01ec\3\2\2\2}\u01ee\3\2\2\2\177"+
		"\u01f0\3\2\2\2\u0081\u01f2\3\2\2\2\u0083\u01f4\3\2\2\2\u0085\u01f6\3\2"+
		"\2\2\u0087\u008a\5Q)\2\u0088\u008b\5E#\2\u0089\u008b\5G$\2\u008a\u0088"+
		"\3\2\2\2\u008a\u0089\3\2\2\2\u008b\u008c\3\2\2\2\u008c\u008d\5Q)\2\u008d"+
		"\4\3\2\2\2\u008e\u0098\5M\'\2\u008f\u0093\5O(\2\u0090\u0094\5M\'\2\u0091"+
		"\u0094\5O(\2\u0092\u0094\5K&\2\u0093\u0090\3\2\2\2\u0093\u0091\3\2\2\2"+
		"\u0093\u0092\3\2\2\2\u0094\u0097\3\2\2\2\u0095\u0097\n\2\2\2\u0096\u008f"+
		"\3\2\2\2\u0096\u0095\3\2\2\2\u0097\u009a\3\2\2\2\u0098\u0099\3\2\2\2\u0098"+
		"\u0096\3\2\2\2\u0099\u009b\3\2\2\2\u009a\u0098\3\2\2\2\u009b\u009c\5M"+
		"\'\2\u009c\6\3\2\2\2\u009d\u009e\5m\67\2\u009e\u009f\5{>\2\u009f\u00a0"+
		"\5i\65\2\u00a0\u00a1\5i\65\2\u00a1\b\3\2\2\2\u00a2\u00a3\5w<\2\u00a3\u00a4"+
		"\5[.\2\u00a4\u00a5\5i\65\2\u00a5\u00a6\5[.\2\u00a6\u00a7\5W,\2\u00a7\u00a8"+
		"\5y=\2\u00a8\n\3\2\2\2\u00a9\u00aa\5y=\2\u00aa\u00ab\5c\62\2\u00ab\u00ac"+
		"\5k\66\2\u00ac\u00ad\5[.\2\u00ad\u00ae\5w<\2\u00ae\u00af\5[.\2\u00af\u00b0"+
		"\5u;\2\u00b0\u00b1\5c\62\2\u00b1\u00b2\5[.\2\u00b2\u00b3\5w<\2\u00b3\f"+
		"\3\2\2\2\u00b4\u00b5\5u;\2\u00b5\u00b6\5[.\2\u00b6\u00b7\5W,\2\u00b7\u00b8"+
		"\5o8\2\u00b8\u00b9\5u;\2\u00b9\u00ba\5Y-\2\u00ba\u00bb\5w<\2\u00bb\16"+
		"\3\2\2\2\u00bc\u00bd\5]/\2\u00bd\u00be\5u;\2\u00be\u00bf\5o8\2\u00bf\u00c0"+
		"\5k\66\2\u00c0\20\3\2\2\2\u00c1\u00c2\5o8\2\u00c2\u00c3\5]/\2\u00c3\22"+
		"\3\2\2\2\u00c4\u00c5\5c\62\2\u00c5\u00c6\5m\67\2\u00c6\24\3\2\2\2\u00c7"+
		"\u00c8\5_\60\2\u00c8\u00c9\5u;\2\u00c9\u00ca\5o8\2\u00ca\u00cb\5{>\2\u00cb"+
		"\u00cc\5q9\2\u00cc\u00cd\7\"\2\2\u00cd\u00ce\5U+\2\u00ce\u00cf\5\u0083"+
		"B\2\u00cf\26\3\2\2\2\u00d0\u00d1\5]/\2\u00d1\u00d2\5c\62\2\u00d2\u00d3"+
		"\5i\65\2\u00d3\u00d4\5y=\2\u00d4\u00d5\5[.\2\u00d5\u00d6\5u;\2\u00d6\u00d7"+
		"\7\"\2\2\u00d7\u00d8\5U+\2\u00d8\u00d9\5\u0083B\2\u00d9\30\3\2\2\2\u00da"+
		"\u00db\5o8\2\u00db\u00dc\5u;\2\u00dc\u00e0\3\2\2\2\u00dd\u00de\7~\2\2"+
		"\u00de\u00e0\7~\2\2\u00df\u00da\3\2\2\2\u00df\u00dd\3\2\2\2\u00e0\32\3"+
		"\2\2\2\u00e1\u00e2\5S*\2\u00e2\u00e3\5m\67\2\u00e3\u00e4\5Y-\2\u00e4\u00e8"+
		"\3\2\2\2\u00e5\u00e6\7(\2\2\u00e6\u00e8\7(\2\2\u00e7\u00e1\3\2\2\2\u00e7"+
		"\u00e5\3\2\2\2\u00e8\34\3\2\2\2\u00e9\u00ea\5m\67\2\u00ea\u00eb\5o8\2"+
		"\u00eb\u00ec\5y=\2\u00ec\u00ef\3\2\2\2\u00ed\u00ef\7#\2\2\u00ee\u00e9"+
		"\3\2\2\2\u00ee\u00ed\3\2\2\2\u00ef\36\3\2\2\2\u00f0\u00f1\5c\62\2\u00f1"+
		"\u00f2\5_\60\2\u00f2\u00f3\5m\67\2\u00f3\u00f4\5o8\2\u00f4\u00f5\5u;\2"+
		"\u00f5\u00f6\5[.\2\u00f6 \3\2\2\2\u00f7\u00f8\5W,\2\u00f8\u00f9\5o8\2"+
		"\u00f9\u00fa\5{>\2\u00fa\u00fb\5m\67\2\u00fb\u00fc\5y=\2\u00fc\"\3\2\2"+
		"\2\u00fd\u00fe\5w<\2\u00fe\u00ff\5{>\2\u00ff\u0100\5k\66\2\u0100$\3\2"+
		"\2\2\u0101\u0102\5k\66\2\u0102\u0103\5c\62\2\u0103\u0104\5m\67\2\u0104"+
		"&\3\2\2\2\u0105\u0106\5k\66\2\u0106\u0107\5S*\2\u0107\u0108\5\u0081A\2"+
		"\u0108(\3\2\2\2\u0109\u010a\5S*\2\u010a\u010b\5}?\2\u010b\u010c\5[.\2"+
		"\u010c\u010d\5u;\2\u010d\u010e\5S*\2\u010e\u010f\5_\60\2\u010f\u0110\5"+
		"[.\2\u0110*\3\2\2\2\u0111\u0112\5k\66\2\u0112\u0113\5o8\2\u0113\u0114"+
		"\5Y-\2\u0114\u0115\5[.\2\u0115,\3\2\2\2\u0116\u0117\5k\66\2\u0117\u0118"+
		"\5[.\2\u0118\u0119\5S*\2\u0119\u011a\5m\67\2\u011a.\3\2\2\2\u011b\u011c"+
		"\5k\66\2\u011c\u011d\5[.\2\u011d\u011e\5Y-\2\u011e\u011f\5c\62\2\u011f"+
		"\u0120\5S*\2\u0120\u0121\5m\67\2\u0121\60\3\2\2\2\u0122\u0123\7?\2\2\u0123"+
		"\62\3\2\2\2\u0124\u0125\7*\2\2\u0125\64\3\2\2\2\u0126\u0127\7+\2\2\u0127"+
		"\66\3\2\2\2\u0128\u0129\7]\2\2\u01298\3\2\2\2\u012a\u012b\7_\2\2\u012b"+
		":\3\2\2\2\u012c\u012d\7}\2\2\u012d<\3\2\2\2\u012e\u012f\7\177\2\2\u012f"+
		">\3\2\2\2\u0130\u0131\7.\2\2\u0131@\3\2\2\2\u0132\u0133\t\3\2\2\u0133"+
		"\u0134\t\3\2\2\u0134\u0135\7\60\2\2\u0135\u0136\t\3\2\2\u0136\u0137\t"+
		"\3\2\2\u0137\u0138\7\60\2\2\u0138\u0139\t\3\2\2\u0139\u013a\t\3\2\2\u013a"+
		"\u013b\t\3\2\2\u013b\u013c\t\3\2\2\u013c\u013d\7\"\2\2\u013d\u013e\t\3"+
		"\2\2\u013e\u013f\t\3\2\2\u013f\u0140\7<\2\2\u0140\u0141\t\3\2\2\u0141"+
		"\u0142\t\3\2\2\u0142\u0143\7<\2\2\u0143\u0144\t\3\2\2\u0144\u01a3\t\3"+
		"\2\2\u0145\u0146\t\3\2\2\u0146\u0147\t\3\2\2\u0147\u0148\7\60\2\2\u0148"+
		"\u0149\t\3\2\2\u0149\u014a\t\3\2\2\u014a\u014b\7\60\2\2\u014b\u014c\t"+
		"\3\2\2\u014c\u014d\t\3\2\2\u014d\u014e\t\3\2\2\u014e\u01a3\t\3\2\2\u014f"+
		"\u0150\t\3\2\2\u0150\u0151\t\3\2\2\u0151\u0152\t\3\2\2\u0152\u0153\t\3"+
		"\2\2\u0153\u0154\7/\2\2\u0154\u0155\t\3\2\2\u0155\u0156\t\3\2\2\u0156"+
		"\u0157\7/\2\2\u0157\u0158\t\3\2\2\u0158\u0159\t\3\2\2\u0159\u015a\7\""+
		"\2\2\u015a\u015b\t\3\2\2\u015b\u015c\t\3\2\2\u015c\u015d\7<\2\2\u015d"+
		"\u015e\t\3\2\2\u015e\u015f\t\3\2\2\u015f\u0160\7<\2\2\u0160\u0161\t\3"+
		"\2\2\u0161\u01a3\t\3\2\2\u0162\u0163\t\3\2\2\u0163\u0164\t\3\2\2\u0164"+
		"\u0165\t\3\2\2\u0165\u0166\t\3\2\2\u0166\u0167\7/\2\2\u0167\u0168\t\3"+
		"\2\2\u0168\u0169\t\3\2\2\u0169\u016a\7/\2\2\u016a\u016b\t\3\2\2\u016b"+
		"\u01a3\t\3\2\2\u016c\u016d\t\3\2\2\u016d\u016e\t\3\2\2\u016e\u016f\t\3"+
		"\2\2\u016f\u0170\t\3\2\2\u0170\u0171\t\3\2\2\u0171\u0172\t\3\2\2\u0172"+
		"\u0173\t\3\2\2\u0173\u0174\t\3\2\2\u0174\u0175\7\"\2\2\u0175\u0176\t\3"+
		"\2\2\u0176\u0177\t\3\2\2\u0177\u0178\7<\2\2\u0178\u0179\t\3\2\2\u0179"+
		"\u017a\t\3\2\2\u017a\u017b\7<\2\2\u017b\u017c\t\3\2\2\u017c\u01a3\t\3"+
		"\2\2\u017d\u017e\t\3\2\2\u017e\u017f\t\3\2\2\u017f\u0180\t\3\2\2\u0180"+
		"\u0181\t\3\2\2\u0181\u0182\t\3\2\2\u0182\u0183\t\3\2\2\u0183\u0184\t\3"+
		"\2\2\u0184\u01a3\t\3\2\2\u0185\u0186\t\3\2\2\u0186\u0187\t\3\2\2\u0187"+
		"\u0188\t\3\2\2\u0188\u0189\t\3\2\2\u0189\u018a\7\60\2\2\u018a\u018b\t"+
		"\3\2\2\u018b\u018c\t\3\2\2\u018c\u018d\7\60\2\2\u018d\u018e\t\3\2\2\u018e"+
		"\u018f\t\3\2\2\u018f\u0190\7\"\2\2\u0190\u0191\t\3\2\2\u0191\u0192\t\3"+
		"\2\2\u0192\u0193\7<\2\2\u0193\u0194\t\3\2\2\u0194\u0195\t\3\2\2\u0195"+
		"\u0196\7<\2\2\u0196\u0197\t\3\2\2\u0197\u01a3\t\3\2\2\u0198\u0199\t\3"+
		"\2\2\u0199\u019a\t\3\2\2\u019a\u019b\t\3\2\2\u019b\u019c\t\3\2\2\u019c"+
		"\u019d\7\60\2\2\u019d\u019e\t\3\2\2\u019e\u019f\t\3\2\2\u019f\u01a0\7"+
		"\60\2\2\u01a0\u01a1\t\3\2\2\u01a1\u01a3\t\3\2\2\u01a2\u0132\3\2\2\2\u01a2"+
		"\u0145\3\2\2\2\u01a2\u014f\3\2\2\2\u01a2\u0162\3\2\2\2\u01a2\u016c\3\2"+
		"\2\2\u01a2\u017d\3\2\2\2\u01a2\u0185\3\2\2\2\u01a2\u0198\3\2\2\2\u01a3"+
		"B\3\2\2\2\u01a4\u01a6\t\3\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2"+
		"\u01a7\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8D\3\2\2\2\u01a9\u01ab\t"+
		"\4\2\2\u01aa\u01a9\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ac"+
		"\u01ad\3\2\2\2\u01adF\3\2\2\2\u01ae\u01b2\t\4\2\2\u01af\u01b1\t\5\2\2"+
		"\u01b0\u01af\3\2\2\2\u01b1\u01b4\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3"+
		"\3\2\2\2\u01b3H\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b5\u01b7\t\6\2\2\u01b6"+
		"\u01b5\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8\u01b9\3\2"+
		"\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\b%\2\2\u01bbJ\3\2\2\2\u01bc\u01bd"+
		"\7,\2\2\u01bdL\3\2\2\2\u01be\u01bf\7)\2\2\u01bfN\3\2\2\2\u01c0\u01c1\7"+
		"^\2\2\u01c1P\3\2\2\2\u01c2\u01c3\7$\2\2\u01c3R\3\2\2\2\u01c4\u01c5\t\7"+
		"\2\2\u01c5T\3\2\2\2\u01c6\u01c7\t\b\2\2\u01c7V\3\2\2\2\u01c8\u01c9\t\t"+
		"\2\2\u01c9X\3\2\2\2\u01ca\u01cb\t\n\2\2\u01cbZ\3\2\2\2\u01cc\u01cd\t\13"+
		"\2\2\u01cd\\\3\2\2\2\u01ce\u01cf\t\f\2\2\u01cf^\3\2\2\2\u01d0\u01d1\t"+
		"\r\2\2\u01d1`\3\2\2\2\u01d2\u01d3\t\16\2\2\u01d3b\3\2\2\2\u01d4\u01d5"+
		"\t\17\2\2\u01d5d\3\2\2\2\u01d6\u01d7\t\20\2\2\u01d7f\3\2\2\2\u01d8\u01d9"+
		"\t\21\2\2\u01d9h\3\2\2\2\u01da\u01db\t\22\2\2\u01dbj\3\2\2\2\u01dc\u01dd"+
		"\t\23\2\2\u01ddl\3\2\2\2\u01de\u01df\t\24\2\2\u01dfn\3\2\2\2\u01e0\u01e1"+
		"\t\25\2\2\u01e1p\3\2\2\2\u01e2\u01e3\t\26\2\2\u01e3r\3\2\2\2\u01e4\u01e5"+
		"\t\27\2\2\u01e5t\3\2\2\2\u01e6\u01e7\t\30\2\2\u01e7v\3\2\2\2\u01e8\u01e9"+
		"\t\31\2\2\u01e9x\3\2\2\2\u01ea\u01eb\t\32\2\2\u01ebz\3\2\2\2\u01ec\u01ed"+
		"\t\33\2\2\u01ed|\3\2\2\2\u01ee\u01ef\t\34\2\2\u01ef~\3\2\2\2\u01f0\u01f1"+
		"\t\35\2\2\u01f1\u0080\3\2\2\2\u01f2\u01f3\t\36\2\2\u01f3\u0082\3\2\2\2"+
		"\u01f4\u01f5\t\37\2\2\u01f5\u0084\3\2\2\2\u01f6\u01f7\t \2\2\u01f7\u0086"+
		"\3\2\2\2\17\2\u008a\u0093\u0096\u0098\u00df\u00e7\u00ee\u01a2\u01a7\u01ac"+
		"\u01b2\u01b8";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}