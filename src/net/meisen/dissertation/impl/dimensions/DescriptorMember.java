package net.meisen.dissertation.impl.dimensions;

import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

import net.meisen.general.genmisc.types.Objects;

public class DescriptorMember {

	private final String id;
	private final DescriptorHierarchy descriptorHierarchy;

	private final Set<DescriptorMember> rollUpTo;

	private DescriptorLevel level;
	private String name;
	private String pattern;

	private boolean autoGenerated;

	public DescriptorMember(final DescriptorHierarchy descriptorHierarchy,
			final String id, final String name, final String pattern,
			final DescriptorLevel level,
			final Collection<DescriptorMember> rollUpTo) {
		this.descriptorHierarchy = descriptorHierarchy;
		this.id = id;
		this.name = name;
		this.pattern = pattern;
		this.level = level;

		this.rollUpTo = new HashSet<DescriptorMember>();
		if (rollUpTo != null) {
			this.rollUpTo.addAll(rollUpTo);
		}

		this.autoGenerated = false;
	}

	public DescriptorHierarchy getHierachy() {
		return descriptorHierarchy;
	}

	public String getPattern() {
		return pattern;
	}

	public void setPattern(final String pattern) {
		this.pattern = pattern;
	}

	public DescriptorLevel getLevel() {
		return level;
	}

	public void setLevel(final DescriptorLevel level) {
		this.level = level;
	}

	public String getName() {
		return name;
	}

	public void setName(final String name) {
		this.name = name;
	}

	public String getId() {
		return id;
	}

	public boolean isAutoGenerated() {
		return autoGenerated;
	}

	public void setAutoGenerated(final boolean autoGenerated) {
		this.autoGenerated = autoGenerated;
	}

	public void setRollUpTo(final Collection<DescriptorMember> rollUpTo) {
		this.rollUpTo.clear();
		this.rollUpTo.addAll(rollUpTo);
	}

	@Override
	public String toString() {
		return name + " (" + id + ")";
	}

	@Override
	public int hashCode() {
		return id.hashCode();
	}

	@Override
	public boolean equals(final Object obj) {
		if (obj == this) {
			return true;
		} else if (obj == null) {
			return false;
		} else if (obj instanceof DescriptorMember) {
			final DescriptorMember cmpMember = (DescriptorMember) obj;
			return Objects.equals(id, cmpMember.getId())
					&& Objects.equals(getHierachy(), cmpMember.getHierachy());
		} else {
			return false;
		}
	}

	public Collection<DescriptorMember> getRollUpTo() {
		return Collections.unmodifiableCollection(rollUpTo);
	}

	public boolean isPatternBased() {
		return pattern != null;
	}
}
