<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<config xmlns="http://dev.meisen.net/xsd/dissertation/config" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:idx="http://dev.meisen.net/xsd/dissertation/model/indexes"
        xmlns:map="http://dev.meisen.net/xsd/dissertation/model/mapper"
        
        xsi:schemaLocation="http://dev.meisen.net/xsd/dissertation/config        http://dev.meisen.net/xsd/dissertation/tidaConfig.xsd
                            http://dev.meisen.net/xsd/dissertation/model/indexes http://dev.meisen.net/xsd/dissertation/tidaIndexFactory.xsd
                            http://dev.meisen.net/xsd/dissertation/model/mapper  http://dev.meisen.net/xsd/dissertation/tidaMapperFactory.xsd">

  <!-- Define the location the server stores it's data at -->
  <location folder="_data" />

  <auth>
    <!-- Define the manager used for authentication:
         
         The following cache implementations are available:
          + net.meisen.dissertation.impl.auth.AllAccessAuthManager
          + net.meisen.dissertation.impl.auth.shiro.ShiroAuthManager
      -->
    <manager implementation="net.meisen.dissertation.impl.auth.AllAccessAuthManager" />
  </auth>

  <caches>
    <!-- Define the cache to be used for metadata.

         The following cache implementations are available:
          + net.meisen.dissertation.impl.cache.MemoryIdentifierCache
          + net.meisen.dissertation.impl.cache.FileIdentifierCache
      -->
    <identifier implementation="net.meisen.dissertation.impl.cache.MemoryIdentifierCache" />
  
    <!-- Define the cache to be used for metadata.

         The following cache implementations are available:
          + net.meisen.dissertation.impl.cache.MemoryMetaDataCache
          + net.meisen.dissertation.impl.cache.FileMetaDataCache
      -->
    <metadata implementation="net.meisen.dissertation.impl.cache.MemoryMetaDataCache" />
    
    <!-- Define the cache to be used for bitmaps.

         The following cache implementations are available:
          + net.meisen.dissertation.impl.cache.MemoryBitmapCache
          + net.meisen.dissertation.impl.cache.MapDbBitmapCache
          + net.meisen.dissertation.impl.cache.FileBitmapCache
      -->
    <bitmap implementation="net.meisen.dissertation.impl.cache.MemoryBitmapCache" />
    
    <!-- Define the cache to be used for fact-sets.

         The following cache implementations are available:
          + net.meisen.dissertation.impl.cache.MemoryFactDescriptorModelSetCache
          + net.meisen.dissertation.impl.cache.FileFactDescriptorModelSetCache
      -->
    <factsets implementation="net.meisen.dissertation.impl.cache.MemoryFactDescriptorModelSetCache" />
    
    <!-- Define the cache to be used for records.

         The following cache implementations are available:
          + net.meisen.dissertation.impl.cache.IdsOnlyDataRecordCache
          + net.meisen.dissertation.impl.cache.MemoryDataRecordCache
          + net.meisen.dissertation.impl.cache.MapDbDataRecordCache
      -->
    <records implementation="net.meisen.dissertation.impl.cache.IdsOnlyDataRecordCache" />
  </caches>

  <factories>
    <!-- Define the factory to be used to determine which IndexFactory
         to be used.
         
         The following factories are available by default:
          + net.meisen.dissertation.impl.indexes.IndexFactory
      -->
    <indexes implementation="net.meisen.dissertation.impl.indexes.IndexFactory">
      <!-- Define the different indexes to be used.
      
           The following bitmap-indexes are available by default:
            + net.meisen.dissertation.impl.indexes.datarecord.slices.EWAHBitmap
            + net.meisen.dissertation.impl.indexes.datarecord.slices.RoaringBitmap
           
           The following implementations are by default available for specific 
           primitive data types:
            + net.meisen.dissertation.impl.indexes.FastUtilIntIndexedCollection
            + net.meisen.dissertation.impl.indexes.FastUtilLongIndexedCollection
            + net.meisen.dissertation.impl.indexes.HppcIntIndexedCollection
            + net.meisen.dissertation.impl.indexes.HppcLongIndexedCollection
            + net.meisen.dissertation.impl.indexes.TroveByteIndexedCollection
            + net.meisen.dissertation.impl.indexes.TroveShortIndexedCollection
            + net.meisen.dissertation.impl.indexes.TroveIntIndexedCollection
            + net.meisen.dissertation.impl.indexes.TroveLongIndexedCollection 
        -->
      <idx:config bitmap="net.meisen.dissertation.impl.indexes.datarecord.slices.EWAHBitmap"
                  byte="net.meisen.dissertation.impl.indexes.TroveByteIndexedCollection"
        	      short="net.meisen.dissertation.impl.indexes.TroveShortIndexedCollection"
                  int="net.meisen.dissertation.impl.indexes.TroveIntIndexedCollection"
                  long="net.meisen.dissertation.impl.indexes.TroveLongIndexedCollection" />
    </indexes>
    
    <!-- Define the factory to be used to determine which MapperFactory
         to be used.
         
         The following factories are available by default:
          + net.meisen.dissertation.impl.time.mapper.MapperFactory
      -->
    <mappers implementation="net.meisen.dissertation.impl.time.mapper.MapperFactory">
      <map:config>
      
        <!--
          Adds mappers to the default once. The default once cannot be removed and are:
           + net.meisen.dissertation.impl.time.mapper.DateMapper
           + net.meisen.dissertation.impl.time.mapper.LongMapper
          -->
        <map:mapper implementation="net.meisen.dissertation.impl.time.mapper.DateMapper" />
        <map:mapper implementation="net.meisen.dissertation.impl.time.mapper.LongMapper" />
      </map:config>
    </mappers>
    
    <!-- Define the factory to be used to determine the granularity-factory.
         
         The following factories are available by default:
          + net.meisen.dissertation.impl.time.granularity.TimeGranularityFactory
      -->
    <granularities implementation="net.meisen.dissertation.impl.time.granularity.TimeGranularityFactory" />
    
    <!-- Define the factory to be used to create queries.
         
         The following factories are available by default:
          + net.meisen.dissertation.impl.parser.query.QueryFactory
      -->
    <queries implementation="net.meisen.dissertation.impl.parser.query.QueryFactory" />
  </factories>
  
  <!-- Adds additional aggregation-functions or overrides the once available 
       by default.
       
       The following aggregation-functions are added by default:
        + net.meisen.dissertation.impl.measures.Count
        + net.meisen.dissertation.impl.measures.Min
        + net.meisen.dissertation.impl.measures.Max
        + net.meisen.dissertation.impl.measures.Sum
        + net.meisen.dissertation.impl.measures.Mean
        + net.meisen.dissertation.impl.measures.Median
        + net.meisen.dissertation.impl.measures.Mode
    --> 
  <aggregations>
    <function implementation="net.meisen.dissertation.impl.measures.Count" />
  </aggregations>
  
  <server>
    <http port="7000" enable="true" />
    <tsql port="7001" timeout="1800000" enable="true" />
    <control port="7002" enable="false" />
  </server>
</config>